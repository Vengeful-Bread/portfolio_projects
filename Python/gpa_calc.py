score_table = {
    "100": (4.000, (5.000, 5.500, 6.000)),
    "99": (3.900, (4.900, 5.400, 5.900)),
    "98": (3.800, (4.800, 5.300, 5.800)),
    "97": (3.700, (4.700, 5.200, 5.700)),
    "96": (3.600, (4.600, 5.100, 5.600)),
    "95": (3.500, (4.500, 5.000, 5.500)),
    "94": (3.400, (4.400, 4.900, 5.400)),
    "93": (3.300, (4.300, 4.800, 5.300)),
    "92": (3.200, (4.200, 4.700, 5.200)),
    "91": (3.100, (4.100, 4.600, 5.100)),
    "90": (3.000, (4.000, 4.500, 5.000)),
    "89": (2.900, (3.900, 4.400, 4.900)),
    "88": (2.800, (3.800, 4.300, 4.800)),
    "87": (2.700, (3.700, 4.200, 4.700)),
    "86": (2.600, (3.600, 4.100, 4.600)),
    "85": (2.500, (3.500, 4.000, 4.500)),
    "84": (2.400, (3.400, 3.900, 4.400)),
    "83": (2.300, (3.300, 3.800, 4.300)),
    "82": (2.200, (3.200, 3.700, 4.200)),
    "81": (2.100, (3.100, 3.600, 4.100)),
    "80": (2.000, (3.000, 3.500, 4.000)),
    "79": (1.900, (2.900, 3.400, 3.900)),
    "78": (1.800, (2.800, 3.300, 3.800)),
    "77": (1.700, (2.700, 3.200, 3.700)),
    "76": (1.600, (2.600, 3.100, 3.600)),
    "75": (1.500, (2.500, 3.000, 3.500)),
    "74": (1.400, (2.400, 2.900, 3.400)),
    "73": (1.300, (2.300, 2.800, 3.300)),
    "72": (1.200, (2.200, 2.700, 3.200)),
    "71": (1.100, (2.100, 2.600, 3.100)),
    "70": (1.000, (2.000, 2.500, 3.000)),
    "69": (0.900, (1.900, 2.400, 2.900)),
    "68": (0.800, (1.800, 2.300, 2.800)),
    "67": (0.700, (1.700, 2.200, 2.700)),
    "66": (0.600, (1.600, 2.100, 2.600)),
    "65": (0.500, (1.500, 2.000, 2.500)),
    "64": (0.400, (1.400, 1.900, 2.400)),
    "63": (0.300, (1.300, 1.800, 2.300)),
    "62": (0.200, (1.200, 1.700, 2.200)),
    "61": (0.100, (1.100, 1.600, 2.100)),
    "60": (0.000, (1.000, 1.500, 2.000)),
    "59": (0.000, (0.900, 1.400, 1.900)),
    "58": (0.000, (0.800, 1.300, 1.800)),
    "57": (0.000, (0.700, 1.200, 1.700)),
    "56": (0.000, (0.600, 1.100, 1.600)),
    "55": (0.000, (0.500, 1.000, 1.500)),
    "54": (0.000, (0.400, 0.900, 1.400)),
    "53": (0.000, (0.300, 0.800, 1.300)),
    "52": (0.000, (0.200, 0.700, 1.200)),
    "51": (0.000, (0.100, 0.600, 1.100)),
    "50": (0.000, (0.000, 0.000, 0.000)),
    "49": (0.000, (0.000, 0.000, 0.000)),
    "48": (0.000, (0.000, 0.000, 0.000)),
    "47": (0.000, (0.000, 0.000, 0.000)),
    "46": (0.000, (0.000, 0.000, 0.000)),
    "45": (0.000, (0.000, 0.000, 0.000)),
    "44": (0.000, (0.000, 0.000, 0.000)),
    "43": (0.000, (0.000, 0.000, 0.000)),
    "42": (0.000, (0.000, 0.000, 0.000)),
    "41": (0.000, (0.000, 0.000, 0.000)),
    "40": (0.000, (0.000, 0.000, 0.000)),
    "39": (0.000, (0.000, 0.000, 0.000)),
    "38": (0.000, (0.000, 0.000, 0.000)),
    "37": (0.000, (0.000, 0.000, 0.000)),
    "36": (0.000, (0.000, 0.000, 0.000)),
    "35": (0.000, (0.000, 0.000, 0.000)),
    "34": (0.000, (0.000, 0.000, 0.000)),
    "33": (0.000, (0.000, 0.000, 0.000)),
    "32": (0.000, (0.000, 0.000, 0.000)),
    "31": (0.000, (0.000, 0.000, 0.000)),
    "30": (0.000, (0.000, 0.000, 0.000)),
    "29": (0.000, (0.000, 0.000, 0.000)),
    "28": (0.000, (0.000, 0.000, 0.000)),
    "27": (0.000, (0.000, 0.000, 0.000)),
    "26": (0.000, (0.000, 0.000, 0.000)),
    "25": (0.000, (0.000, 0.000, 0.000)),
    "24": (0.000, (0.000, 0.000, 0.000)),
    "23": (0.000, (0.000, 0.000, 0.000)),
    "22": (0.000, (0.000, 0.000, 0.000)),
    "21": (0.000, (0.000, 0.000, 0.000)),
    "20": (0.000, (0.000, 0.000, 0.000)),
    "19": (0.000, (0.000, 0.000, 0.000)),
    "18": (0.000, (0.000, 0.000, 0.000)),
    "17": (0.000, (0.000, 0.000, 0.000)),
    "16": (0.000, (0.000, 0.000, 0.000)),
    "15": (0.000, (0.000, 0.000, 0.000)),
    "14": (0.000, (0.000, 0.000, 0.000)),
    "13": (0.000, (0.000, 0.000, 0.000)),
    "12": (0.000, (0.000, 0.000, 0.000)),
    "11": (0.000, (0.000, 0.000, 0.000)),
    "10": (0.000, (0.000, 0.000, 0.000)),
    "9": (0.000, (0.000, 0.000, 0.000)),
    "8": (0.000, (0.000, 0.000, 0.000)),
    "7": (0.000, (0.000, 0.000, 0.000)),
    "6": (0.000, (0.000, 0.000, 0.000)),
    "5": (0.000, (0.000, 0.000, 0.000)),
    "4": (0.000, (0.000, 0.000, 0.000)),
    "3": (0.000, (0.000, 0.000, 0.000)),
    "2": (0.000, (0.000, 0.000, 0.000)),
    "1": (0.000, (0.000, 0.000, 0.000)),
}

grades = (("97", "U"), ("97", "U")) # In each nested tuple, (grade, [H, CP, AP, U])

for completed_class in grades:
    (grade, class_type) = completed_class
    if class_type == "U":
        print(score_table[grade][0])